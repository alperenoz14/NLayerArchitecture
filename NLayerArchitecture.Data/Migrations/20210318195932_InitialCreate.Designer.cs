// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayerArchitecture.Data;

namespace NLayerArchitecture.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210318195932_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NLayerArchitecture.Core.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IsDeleted = false,
                            Name = "Laptop"
                        },
                        new
                        {
                            ID = 2,
                            IsDeleted = false,
                            Name = "Mobile"
                        });
                });

            modelBuilder.Entity("NLayerArchitecture.Core.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("InnerBarcode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Asus",
                            Price = 400m,
                            Stock = 200
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Lenovo",
                            Price = 500m,
                            Stock = 300
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Macbook",
                            Price = 700m,
                            Stock = 250
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 2,
                            IsDeleted = false,
                            Name = "IPhone",
                            Price = 300m,
                            Stock = 350
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 2,
                            IsDeleted = false,
                            Name = "Samsung",
                            Price = 250m,
                            Stock = 350
                        });
                });

            modelBuilder.Entity("NLayerArchitecture.Core.Entities.Product", b =>
                {
                    b.HasOne("NLayerArchitecture.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
